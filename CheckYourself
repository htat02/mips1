#CS2640 Date 11/20/2023
#This code is check yourself exercise
#int sum (int n, int acc) {
#	if (n > 0)
#		return sum(n-1, acc + n);
#	else
#		return acc;
#	}

.data
msg1: .asciiz "Please give the value of n: "
msg2: .asciiz "Please give the value of acc: "
result_msg: .asciiz "Result: "

.text 
main:
	#display msg1
	la $a0, msg1
	li $v0, 4
	syscall
	#read n
	li $v0, 5
	syscall
	move $a1, $v0    # pass the value of n to a1
	#display msg2
	la $a0, msg2
	li $v0, 4
	syscall
	#read acc
	li $v0, 5
	syscall
	move $a2, $v0    # pass the value of acc to a2
	jal sum
	#display result_msg
	la $a0, result_msg
	li $v0, 4
	syscall
	move $a0, $a2    # pass the result (acc) to be displayed
	li $v0, 1
	syscall

	
exit:	li $v0, 10	#exit
	syscall

sum:
	addi $sp, $sp, -8	#adds 3 items to stack
	sw $ra, 8($sp)		# save return address
	sw $a1, 4($sp)		# save n
	sw $a2, 0($sp)		#save acc	

	slti $t0, $a1, 1	# test n < 1
	beq $t0, 1, L1		#if so exit function go to L1

	# Function: return sum(n - 1, acc + n)
	lw $a1, 4($sp)       # load n
	lw $a2, 0($sp)       # load acc
	add $a2, $a2, $a1    # acc + n
	addi $a1, $a1, -1    # n - 1
	j sum              # recursive call

L1:
	lw $a0, 4($sp)		# restore original n
	lw $ra, 8($sp)		# restore return address
	addi $sp, $sp, 8	# pop 3 items from the stack
	jr $ra               	# return to previus jal
